/*
 * generated by Xtext 2.10.0
 */
grammar InternalDMGen;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.inria.diverse.dmgen.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.inria.diverse.dmgen.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.inria.diverse.dmgen.services.DMGenGrammarAccess;

}

@parser::members {

 	private DMGenGrammarAccess grammarAccess;

    public InternalDMGenParser(TokenStream input, DMGenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "GenConfig";
   	}

   	@Override
   	protected DMGenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGenConfig
entryRuleGenConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenConfigRule()); }
	iv_ruleGenConfig=ruleGenConfig
	{ $current=$iv_ruleGenConfig.current; }
	EOF;

// Rule GenConfig
ruleGenConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenConfigAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGenConfigAccess().getMetamodelMetamodelParserRuleCall_1_0());
				}
				lv_metamodel_1_0=ruleMetamodel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenConfigRule());
					}
					set(
						$current,
						"metamodel",
						lv_metamodel_1_0,
						"fr.inria.diverse.dmgen.DMGen.Metamodel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getGenConfigAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenConfigAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenConfigAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='package'
								{
									newLeafNode(otherlv_3, grammarAccess.getGenConfigAccess().getPackageKeyword_2_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenConfigAccess().getPackagePACKAGEParserRuleCall_2_0_1_0());
										}
										lv_package_4_0=rulePACKAGE
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenConfigRule());
											}
											set(
												$current,
												"package",
												lv_package_4_0,
												"fr.inria.diverse.dmgen.DMGen.PACKAGE");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenConfigAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenConfigAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenConfigAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_5='fs-master'
								{
									newLeafNode(otherlv_5, grammarAccess.getGenConfigAccess().getFsMasterKeyword_2_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenConfigAccess().getHdfsMasterURIParserRuleCall_2_1_1_0());
										}
										lv_hdfsMaster_6_0=ruleURI
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenConfigRule());
											}
											set(
												$current,
												"hdfsMaster",
												lv_hdfsMaster_6_0,
												"fr.inria.diverse.dmgen.DMGen.URI");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenConfigAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenConfigAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenConfigAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>(otherlv_7='deploy-mode'
								{
									newLeafNode(otherlv_7, grammarAccess.getGenConfigAccess().getDeployModeKeyword_2_2_0());
								}
								(
									(
										(
											lv_deployMode_8_1='cluster'
											{
												newLeafNode(lv_deployMode_8_1, grammarAccess.getGenConfigAccess().getDeployModeClusterKeyword_2_2_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getGenConfigRule());
												}
												setWithLastConsumed($current, "deployMode", lv_deployMode_8_1, null);
											}
											    |
											lv_deployMode_8_2='local'
											{
												newLeafNode(lv_deployMode_8_2, grammarAccess.getGenConfigAccess().getDeployModeLocalKeyword_2_2_1_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getGenConfigRule());
												}
												setWithLastConsumed($current, "deployMode", lv_deployMode_8_2, null);
											}
										)
									)
								)
								otherlv_9='['
								{
									newLeafNode(otherlv_9, grammarAccess.getGenConfigAccess().getLeftSquareBracketKeyword_2_2_2());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenConfigAccess().getNumberOfNodesINTorUNBOUNDEDParserRuleCall_2_2_3_0());
										}
										lv_numberOfNodes_10_0=ruleINTorUNBOUNDED
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenConfigRule());
											}
											set(
												$current,
												"numberOfNodes",
												lv_numberOfNodes_10_0,
												"fr.inria.diverse.dmgen.DMGen.INTorUNBOUNDED");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_11=']'
								{
									newLeafNode(otherlv_11, grammarAccess.getGenConfigAccess().getRightSquareBracketKeyword_2_2_4());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenConfigAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenConfigAccess().getUnorderedGroup_2(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenConfigAccess().getUnorderedGroup_2(), 3);
					}
								({true}?=>(otherlv_12='hbase-master'
								{
									newLeafNode(otherlv_12, grammarAccess.getGenConfigAccess().getHbaseMasterKeyword_2_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenConfigAccess().getHbaseMasterURIParserRuleCall_2_3_1_0());
										}
										lv_hbaseMaster_13_0=ruleURI
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenConfigRule());
											}
											set(
												$current,
												"hbaseMaster",
												lv_hbaseMaster_13_0,
												"fr.inria.diverse.dmgen.DMGen.URI");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenConfigAccess().getUnorderedGroup_2());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getGenConfigAccess().getUnorderedGroup_2());
				}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGenConfigAccess().getGeneratorsGeneratorParserRuleCall_3_0());
				}
				lv_generators_14_0=ruleGenerator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenConfigRule());
					}
					add(
						$current,
						"generators",
						lv_generators_14_0,
						"fr.inria.diverse.dmgen.DMGen.Generator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGenConfigAccess().getGeneratorsGeneratorParserRuleCall_4_0());
				}
				lv_generators_15_0=ruleGenerator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenConfigRule());
					}
					add(
						$current,
						"generators",
						lv_generators_15_0,
						"fr.inria.diverse.dmgen.DMGen.Generator");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleINTorUNBOUNDED
entryRuleINTorUNBOUNDED returns [String current=null]:
	{ newCompositeNode(grammarAccess.getINTorUNBOUNDEDRule()); }
	iv_ruleINTorUNBOUNDED=ruleINTorUNBOUNDED
	{ $current=$iv_ruleINTorUNBOUNDED.current.getText(); }
	EOF;

// Rule INTorUNBOUNDED
ruleINTorUNBOUNDED returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getINTorUNBOUNDEDAccess().getAsteriskKeyword_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getINTorUNBOUNDEDAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulePACKAGE
entryRulePACKAGE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPACKAGERule()); }
	iv_rulePACKAGE=rulePACKAGE
	{ $current=$iv_rulePACKAGE.current.getText(); }
	EOF;

// Rule PACKAGE
rulePACKAGE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getPACKAGEAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPACKAGEAccess().getFullStopKeyword_1_0_0());
				}
				    |
				kw='_'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPACKAGEAccess().get_Keyword_1_0_1());
				}
			)
			this_ID_3=RULE_ID
			{
				$current.merge(this_ID_3);
			}
			{
				newLeafNode(this_ID_3, grammarAccess.getPACKAGEAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleDECIMAL
entryRuleDECIMAL returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDECIMALRule()); }
	iv_ruleDECIMAL=ruleDECIMAL
	{ $current=$iv_ruleDECIMAL.current.getText(); }
	EOF;

// Rule DECIMAL
ruleDECIMAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDECIMALAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleGenerator
entryRuleGenerator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneratorRule()); }
	iv_ruleGenerator=ruleGenerator
	{ $current=$iv_ruleGenerator.current; }
	EOF;

// Rule Generator
ruleGenerator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='generate'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getGeneratorAccess().getNameGenerateKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneratorRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "generate");
				}
			)
		)
		(
			(
				lv_number_1_0=RULE_INT
				{
					newLeafNode(lv_number_1_0, grammarAccess.getGeneratorAccess().getNumberINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneratorRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getGeneratorAccess().getWithKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getGeneratorAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneratorAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneratorAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='size'
								{
									newLeafNode(otherlv_4, grammarAccess.getGeneratorAccess().getSizeKeyword_3_0_0());
								}
								(
									(
										lv_size_5_0=RULE_INT
										{
											newLeafNode(lv_size_5_0, grammarAccess.getGeneratorAccess().getSizeINTTerminalRuleCall_3_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getGeneratorRule());
											}
											setWithLastConsumed(
												$current,
												"size",
												lv_size_5_0,
												"org.eclipse.xtext.common.Terminals.INT");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneratorAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneratorAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneratorAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='prefix'
								{
									newLeafNode(otherlv_6, grammarAccess.getGeneratorAccess().getPrefixKeyword_3_1_0());
								}
								(
									(
										lv_prefix_7_0=RULE_STRING
										{
											newLeafNode(lv_prefix_7_0, grammarAccess.getGeneratorAccess().getPrefixSTRINGTerminalRuleCall_3_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getGeneratorRule());
											}
											setWithLastConsumed(
												$current,
												"prefix",
												lv_prefix_7_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneratorAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getGeneratorAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getGeneratorAccess().getUnorderedGroup_3());
				}
		)
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getGeneratorAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getGeneratorAccess().getUnorderedGroup_5());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneratorAccess().getUnorderedGroup_5(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneratorAccess().getUnorderedGroup_5(), 0);
					}
								({true}?=>(otherlv_10='density'
								{
									newLeafNode(otherlv_10, grammarAccess.getGeneratorAccess().getDensityKeyword_5_0_0());
								}
								(
									(
										lv_globalDensity_11_0=RULE_INT
										{
											newLeafNode(lv_globalDensity_11_0, grammarAccess.getGeneratorAccess().getGlobalDensityINTTerminalRuleCall_5_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getGeneratorRule());
											}
											setWithLastConsumed(
												$current,
												"globalDensity",
												lv_globalDensity_11_0,
												"org.eclipse.xtext.common.Terminals.INT");
										}
									)
								)
								otherlv_12=';'
								{
									newLeafNode(otherlv_12, grammarAccess.getGeneratorAccess().getSemicolonKeyword_5_0_2());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneratorAccess().getUnorderedGroup_5());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGeneratorAccess().getUnorderedGroup_5(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGeneratorAccess().getUnorderedGroup_5(), 1);
					}
								({true}?=>(otherlv_13='deviation'
								{
									newLeafNode(otherlv_13, grammarAccess.getGeneratorAccess().getDeviationKeyword_5_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGeneratorAccess().getGlobalDeviationDECIMALParserRuleCall_5_1_1_0());
										}
										lv_globalDeviation_14_0=ruleDECIMAL
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGeneratorRule());
											}
											set(
												$current,
												"globalDeviation",
												lv_globalDeviation_14_0,
												"fr.inria.diverse.dmgen.DMGen.DECIMAL");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_15=';'
								{
									newLeafNode(otherlv_15, grammarAccess.getGeneratorAccess().getSemicolonKeyword_5_1_2());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGeneratorAccess().getUnorderedGroup_5());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getGeneratorAccess().getUnorderedGroup_5());
				}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneratorAccess().getClassesClazzParserRuleCall_6_0());
				}
				lv_classes_16_0=ruleClazz
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneratorRule());
					}
					add(
						$current,
						"classes",
						lv_classes_16_0,
						"fr.inria.diverse.dmgen.DMGen.Clazz");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_17=';'
			{
				newLeafNode(otherlv_17, grammarAccess.getGeneratorAccess().getSemicolonKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeneratorAccess().getClassesClazzParserRuleCall_7_1_0());
					}
					lv_classes_18_0=ruleClazz
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeneratorRule());
						}
						add(
							$current,
							"classes",
							lv_classes_18_0,
							"fr.inria.diverse.dmgen.DMGen.Clazz");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getGeneratorAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleMetamodel
entryRuleMetamodel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetamodelRule()); }
	iv_ruleMetamodel=ruleMetamodel
	{ $current=$iv_ruleMetamodel.current; }
	EOF;

// Rule Metamodel
ruleMetamodel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMetamodelAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMetamodelAccess().getUriURIParserRuleCall_1_0());
				}
				lv_uri_1_0=ruleURI
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetamodelRule());
					}
					set(
						$current,
						"uri",
						lv_uri_1_0,
						"fr.inria.diverse.dmgen.DMGen.URI");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClazz
entryRuleClazz returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClazzRule()); }
	iv_ruleClazz=ruleClazz
	{ $current=$iv_ruleClazz.current; }
	EOF;

// Rule Clazz
ruleClazz returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getClazzAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClazzRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClazzAccess().getRangeRangeParserRuleCall_1_0());
				}
				lv_range_1_0=ruleRange
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClazzRule());
					}
					set(
						$current,
						"range",
						lv_range_1_0,
						"fr.inria.diverse.dmgen.DMGen.Range");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='depth'
			{
				newLeafNode(otherlv_2, grammarAccess.getClazzAccess().getDepthKeyword_2_0());
			}
			(
				(
					lv_depth_3_0=RULE_INT
					{
						newLeafNode(lv_depth_3_0, grammarAccess.getClazzAccess().getDepthINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClazzRule());
						}
						setWithLastConsumed(
							$current,
							"depth",
							lv_depth_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getClazzAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClazzAccess().getPropertiesPropertyParserRuleCall_3_1_0());
					}
					lv_properties_5_0=ruleProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClazzRule());
						}
						add(
							$current,
							"properties",
							lv_properties_5_0,
							"fr.inria.diverse.dmgen.DMGen.Property");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=';'
				{
					newLeafNode(otherlv_6, grammarAccess.getClazzAccess().getSemicolonKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClazzAccess().getPropertiesPropertyParserRuleCall_3_2_1_0());
						}
						lv_properties_7_0=ruleProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClazzRule());
							}
							add(
								$current,
								"properties",
								lv_properties_7_0,
								"fr.inria.diverse.dmgen.DMGen.Property");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getClazzAccess().getRightCurlyBracketKeyword_3_3());
			}
		)?
	)
;

// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	iv_ruleRange=ruleRange
	{ $current=$iv_ruleRange.current; }
	EOF;

// Rule Range
ruleRange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getRangeAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				lv_lower_1_0=RULE_INT
				{
					newLeafNode(lv_lower_1_0, grammarAccess.getRangeAccess().getLowerINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeRule());
					}
					setWithLastConsumed(
						$current,
						"lower",
						lv_lower_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='..'
		{
			newLeafNode(otherlv_2, grammarAccess.getRangeAccess().getFullStopFullStopKeyword_2());
		}
		(
			(
				lv_upper_3_0=RULE_INT
				{
					newLeafNode(lv_upper_3_0, grammarAccess.getRangeAccess().getUpperINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeRule());
					}
					setWithLastConsumed(
						$current,
						"upper",
						lv_upper_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getRangeAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPropertyAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPropertyAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getPropertyAccess().getRangeRangeParserRuleCall_1_0_0_0());
										}
										lv_range_2_0=ruleRange
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPropertyRule());
											}
											set(
												$current,
												"range",
												lv_range_2_0,
												"fr.inria.diverse.dmgen.DMGen.Range");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_3='density'
									{
										newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getDensityKeyword_1_0_1_0());
									}
									(
										(
											lv_density_4_0=RULE_INT
											{
												newLeafNode(lv_density_4_0, grammarAccess.getPropertyAccess().getDensityINTTerminalRuleCall_1_0_1_1_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPropertyRule());
												}
												setWithLastConsumed(
													$current,
													"density",
													lv_density_4_0,
													"org.eclipse.xtext.common.Terminals.INT");
											}
										)
									)
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPropertyAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_5='variation'
								{
									newLeafNode(otherlv_5, grammarAccess.getPropertyAccess().getVariationKeyword_1_1_0());
								}
								(
									(
										lv_variation_6_0=RULE_INT
										{
											newLeafNode(lv_variation_6_0, grammarAccess.getPropertyAccess().getVariationINTTerminalRuleCall_1_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPropertyRule());
											}
											setWithLastConsumed(
												$current,
												"variation",
												lv_variation_6_0,
												"org.eclipse.xtext.common.Terminals.INT");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyAccess().getUnorderedGroup_1());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getPropertyAccess().getUnorderedGroup_1())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPropertyAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleURI
entryRuleURI returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getURIRule()); }
	iv_ruleURI=ruleURI
	{ $current=$iv_ruleURI.current; }
	EOF;

// Rule URI
ruleURI returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_scheme_0_0=RULE_SCHEME
				{
					newLeafNode(lv_scheme_0_0, grammarAccess.getURIAccess().getSchemeSCHEMETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getURIRule());
					}
					setWithLastConsumed(
						$current,
						"scheme",
						lv_scheme_0_0,
						"fr.inria.diverse.dmgen.DMGen.SCHEME");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getURIAccess().getAuthorityFRAGMENTParserRuleCall_1_0_0());
					}
					lv_authority_1_0=ruleFRAGMENT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getURIRule());
						}
						set(
							$current,
							"authority",
							lv_authority_1_0,
							"fr.inria.diverse.dmgen.DMGen.FRAGMENT");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='/'
			{
				newLeafNode(otherlv_2, grammarAccess.getURIAccess().getSolidusKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getURIAccess().getFragmentsFRAGMENTParserRuleCall_2_0());
				}
				lv_fragments_3_0=ruleFRAGMENT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getURIRule());
					}
					add(
						$current,
						"fragments",
						lv_fragments_3_0,
						"fr.inria.diverse.dmgen.DMGen.FRAGMENT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='/'
			{
				newLeafNode(otherlv_4, grammarAccess.getURIAccess().getSolidusKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getURIAccess().getFragmentsFRAGMENTParserRuleCall_3_1_0());
					}
					lv_fragments_5_0=ruleFRAGMENT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getURIRule());
						}
						add(
							$current,
							"fragments",
							lv_fragments_5_0,
							"fr.inria.diverse.dmgen.DMGen.FRAGMENT");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFRAGMENT
entryRuleFRAGMENT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFRAGMENTRule()); }
	iv_ruleFRAGMENT=ruleFRAGMENT
	{ $current=$iv_ruleFRAGMENT.current.getText(); }
	EOF;

// Rule FRAGMENT
ruleFRAGMENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFRAGMENTAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFRAGMENTAccess().getFullStopKeyword_1_0_0());
				}
				    |
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFRAGMENTAccess().getHyphenMinusKeyword_1_0_1());
				}
			)
			this_ID_3=RULE_ID
			{
				$current.merge(this_ID_3);
			}
			{
				newLeafNode(this_ID_3, grammarAccess.getFRAGMENTAccess().getIDTerminalRuleCall_1_1());
			}
		)*
		(
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFRAGMENTAccess().getColonKeyword_2_0());
			}
			this_INT_5=RULE_INT
			{
				$current.merge(this_INT_5);
			}
			{
				newLeafNode(this_INT_5, grammarAccess.getFRAGMENTAccess().getINTTerminalRuleCall_2_1());
			}
		)?
	)
;

RULE_SCHEME : ('http://'|'file:///'|'platform:/'|'neoemfhbase://'|'hdfs://');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
